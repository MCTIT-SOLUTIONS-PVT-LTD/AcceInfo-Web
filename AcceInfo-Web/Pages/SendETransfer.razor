@page "/send-e-transfer"
@using System.Net.Http.Headers
@using System.Text.Json
@layout MainLayout
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage


@if (IsLoading)
{
    <div class="spinner-overlay">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
<div class="row">
    <SideNavSlider />

    <div class="col-lg-9">
        <div class="card">
            <div class="card-body pt-225rem">
                <div class="row">
                    <div class="col-md-12">
                        <div class="ribbon-1">
                            <div class="ribbon-box">
                                <h3><div class="ribbon ribbon-mark bg-primary">Interac E-Transfer</div></h3>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="tab-pane fade show active" id="pay-with-acce-accounts">
                                            <div class="row">
                                                <div class="col-md-12 align-self-center">
                                                    @if (ShowSuccess)
                                                    {

                                                        <div class="card border-success shadow-sm mt-4">
                                                            <div class="card-body">
                                                                <div class="text-center text-success">
                                                                    <i class="fas fa-check-circle fa-2x mb-2"></i>
                                                                    <h5 class="font-weight-bold">Transfer Successful!</h5>
                                                                    <p>@DateTime.Now.ToString("MMM dd, yyyy 'at' h:mm tt") ET</p>
                                                                </div>

                                                                <hr />

                                                                <h6 class="text-primary font-weight-bold"><u>Request Details</u></h6>
                                                                <dl class="row">

                                                                    <dt class="col-sm-5">Transaction ID</dt>
                                                                    <dd class="col-sm-7 text-success">@TransactionId</dd>

                                                                    <dt class="col-sm-5">Transfer From</dt>
                                                                    <dd class="col-sm-7">@Accounts.FirstOrDefault(a => a.AccountId == SelectedTransferFrom)?.AccountName</dd>

                                                                    <dt class="col-sm-5">Transfer To</dt>
                                                                    <dd class="col-sm-7">@Contacts.FirstOrDefault(c => c.AccountId == SelectedTransferTo)?.AccountNumber</dd>

                                                                    <dt class="col-sm-5">Amount</dt>
                                                                    <dd class="col-sm-7">$@Amount</dd>

                                                                    <dt class="col-sm-5">Transfer Date</dt>
                                                                    <dd class="col-sm-7">@CurrentDate.ToString("MMM dd, yyyy")</dd>
                                                                </dl>

                                                                <div class="row justify-content-center mt-4">
                                                                    <div class="col-md-4">
                                                                        <button class="btn btn-primary w-100" @onclick="ReloadPage">Finish</button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else if (ShowConfirmation)
                                                    {
                                                        <div class="card border mt-4">
                                                            <div class="card-body">
                                                                <h4 class="alert-heading font-18 text-primary">Transfer Details</h4>
                                                                <dl class="row mb-0">
                                                                    <dt class="col-sm-5">Transfer From</dt>
                                                                    <dd class="col-sm-7">@Accounts.FirstOrDefault(a => a.AccountId == SelectedTransferFrom)?.AccountName</dd>

                                                                    <dt class="col-sm-5">Transfer To</dt>
                                                                    <dd class="col-sm-7">
                                                                        @(
                                                                            Accounts.FirstOrDefault(a => a.AccountId == SelectedTransferTo) != null
                                                                            ? $"{Accounts.FirstOrDefault(a => a.AccountId == SelectedTransferTo)?.AccountName} - {Accounts.FirstOrDefault(a => a.AccountId == SelectedTransferTo)?.AccountNumber} = {Accounts.FirstOrDefault(a => a.AccountId == SelectedTransferTo)?.Balance:C}"
                                                                            : $"{Contacts.FirstOrDefault(c => c.AccountId == SelectedTransferTo)?.Name ?? Contacts.FirstOrDefault(c => c.AccountId == SelectedTransferTo)?.NickName} - {Contacts.FirstOrDefault(c => c.AccountId == SelectedTransferTo)?.AccountNumber}"
                                                                            )
                                                                    </dd>

                                                                    <dt class="col-sm-5">Amount</dt>
                                                                    <dd class="col-sm-7">$@Amount</dd>

                                                                    <dt class="col-sm-5">Transfer Date</dt>
                                                                    <dd class="col-sm-7">@CurrentDate.ToString("MMM dd, yyyy")</dd>
                                                                </dl>

                                                                <hr />

                                                                <div class="row">
                                                                    <div class="col-12">
                                                                        <p>
                                                                            <span class="text-primary">Interac e-Transfers cannot be postdated or recurring.</span>
                                                                         </p>
                                                                    </div>
                                                                </div>

                                                                <div class="row">
                                                                    <div class="col-md-6 mb-2">
                                                                        <button class="btn btn-outline-primary w-100" @onclick="() => ShowConfirmation = false">Edit</button>
                                                                    </div>
                                                                    <div class="col-md-6 mb-2">
                                                                        <button class="btn btn-primary w-100" @onclick="SubmitTransfer">Transfer Now</button>
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="alert alert-outline-primary mb-0" role="alert">
                                                                    <h4 class="alert-heading font-18"><i class="fas fa-info-circle"></i> When are my transactions processed?</h4>
                                                                    <p>
                                                                        The funds will be deposited directly into your account once the request is fulfilled.<br />
                                                                        You’re responsible for providing the correct recipient contact details. You must have the recipient’s permission to use them.
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <form class="mb-0">
                                                            <div class="row">
                                                                <div class="col-md-6">
                                                                    <div class="form-group">
                                                                        <label>Transfer From *</label>
                                                                        <select class="form-control" @bind="SelectedTransferFrom">
                                                                            <option value="">Select</option>
                                                                            @foreach (var account in Accounts)
                                                                            {
                                                                                <option value="@account.AccountId">@($"{account.AccountName} - {account.AccountNumber} = {account.Balance:C}")</option>
                                                                            }
                                                                        </select>
                                                                        @if (ShowValidation && string.IsNullOrWhiteSpace(SelectedTransferFrom))
                                                                        {
                                                                            <div class="text-danger">Please select the account to transfer from.</div>
                                                                        }
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <div class="form-group">
                                                                        <label>Transfer To *</label>
                                                                        <select class="form-control" @bind="SelectedTransferTo">
                                                                            <option value="">Select</option>
                                                                            @foreach (var contact in Contacts)
                                                                            {
                                                                                <option value="@contact.AccountId">@($"{contact.Name ?? contact.NickName} - {contact.AccountNumber}")</option>
                                                                            }
                                                                        </select>
                                                                        @if (ShowValidation && string.IsNullOrWhiteSpace(SelectedTransferTo))
                                                                        {
                                                                            <div class="text-danger">Please select the recipient.</div>
                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                            

                                                                <div class="col-md-6">
                                                                    <div class="form-group">
                                                                        <label>Amount *</label>
                                                                        <input type="text" class="form-control" @bind="Amount" />
                                                                        @if (ShowValidation && (string.IsNullOrWhiteSpace(Amount) || !decimal.TryParse(Amount, out var amt) || amt <= 0))
                                                                        {
                                                                            <div class="text-danger">Please enter a valid amount.</div>
                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-md-6">
                                                                    <div class="form-group">
                                                                        <label class="col-form-label pt-0">How Often</label>
                                                                        <select class="form-control" disabled>
                                                                            <option value="Once" selected>Once</option>
                                                                            <option value="Weekly">Weekly</option>
                                                                            <option value="Bi-Weekly">Bi-Weekly</option>
                                                                            <option value="Twice Monthly">Twice Monthly</option>
                                                                            <option value="Monthly">Monthly</option>
                                                                            <option value="Month End">Month End</option>
                                                                            <option value="Bi-Monthly">Bi-Monthly</option>
                                                                            <option value="Quarterly">Quarterly</option>
                                                                            <option value="Semi-Annually">Semi-Annually</option>
                                                                            <option value="Annually">Annually</option>
                                                                        </select>
                                                                    </div>
                                                                </div>

                                                                <div class="col-md-6">
                                                                    <div class="form-group">
                                                                        <label class="col-form-label pt-0">When</label>
                                                                        <input class="form-control" type="date" value="@CurrentDate.ToString("yyyy-MM-dd")" disabled>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-12">
                                                                    <p>
                                                                        <span class="text-primary">Interac e-Transfers cannot be postdated or recurring.</span>
                                                                    </p>
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-6">
                                                                    <button type="reset" class="btn btn-outline-primary btn-pd-left-right">Clear</button>
                                                                </div>
                                                                <div class="col-6 text-right">
                                                                    <button type="button" class="btn btn-primary btn-pd-left-right" @onclick="ValidateAndConfirm" >Continue</button>
                                                                </div>
                                                            </div>

                                                            <br />
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <div class="alert alert-outline-primary mb-0" role="alert">
                                                                        <h4 class="alert-heading font-18"><i class="fas fa-info-circle"></i> When are my transactions processed?</h4>
                                                                        <p>
                                                                            After you initiate an <em>Interac</em> e-Transfer, we will withdraw the chosen amount from the account selected and
                                                                            send an email or text message notification to the <em>Interac</em> e-Transfer recipient at the email address or mobile
                                                                            number that you provide. The email or text message notification will identify you as the sender and contain
                                                                            the <em>Interac</em> e-Transfer amount, the name of the <em>Interac</em> e-Transfer recipient, and that you are using
                                                                            <em>Interac</em> e-Transfer.
                                                                        </p>

                                                                        <p>
                                                                            An <em>Interac</em> e-Transfer recipient can claim or decline the <em>Interac</em> e-Transfer using Online and Mobile Banking,
                                                                            the online and mobile banking services of another financial institution.
                                                                        </p>

                                                                        <p>
                                                                            ACCE and other financial institutions participating in <em>Interac</em> e-Transfer, the owner of the <em>Interac</em> e-Transfer
                                                                            service, are entitled to pay an <em>Interac</em> e-Transfer to anyone who, in using Online or Mobile Banking, or the
                                                                            online or mobile banking service of another financial institution, claims the <em>Interac</em> e-Transfer and where
                                                                            applicable, correctly responds to the <em>Interac</em> e-Transfer question, whether you intended that person to receive
                                                                            the <em>Interac</em> e-Transfer or not.
                                                                        </p>

                                                                        <p>You are responsible for providing a correct and operational email address and/or mobile number for the transaction.</p>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                    </form>
                                                    }
                                                </div><!--end col-->
                                            </div><!--end row-->
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!--end card-body-->
        </div><!--end card-->
    </div><!--end col-->
</div><!--end row-->
@code {
    private List<AccountModel> Accounts = new();
    private List<ContactModel> Contacts = new();
    private string SelectedTransferFrom = "";
    private string SelectedTransferTo = "";
    private string Amount = "";
    private DateTime CurrentDate = DateTime.Today;
    private bool ShowValidation = false;
    private bool ShowConfirmation = false;
    private bool ShowSuccess = false;
    private string AuthToken = "";
    private string ContactId = "";
    private bool IsLoading = false;
    private string TransactionId = "";

    protected override async Task OnInitializedAsync()
    {
        AuthToken = await LocalStorage.GetItemAsync<string>("auth_token") ?? "";
        ContactId = await LocalStorage.GetItemAsync<string>("user_contactId") ?? "";
        await FetchAccounts();
        await LoadContacts();
    }

    private void ValidateAndConfirm()
    {
        ShowValidation = true;
        if (!string.IsNullOrWhiteSpace(SelectedTransferFrom) &&
            !string.IsNullOrWhiteSpace(SelectedTransferTo) &&
            decimal.TryParse(Amount, out var amt) && amt > 0)
        {
            ShowConfirmation = true;
            ShowValidation = false;
        }
    }

    private async Task SubmitTransfer()
    {
        IsLoading = true; // Show spinner
        StateHasChanged(); // Refresh UI

        TransactionId = $"ETRN-{DateTime.Now:yyyyMMddHHmmss}";

        await Task.Delay(3000); // Wait for 3 seconds

        ShowSuccess = true;
        ShowConfirmation = false;

        IsLoading = false; // Hide spinner
        StateHasChanged(); // Refresh UI after update
    }

    private void ReloadPage() => NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);

    private async Task FetchAccounts()
    {
        IsLoading = true;
        try
        {
            var request = new HttpRequestMessage(HttpMethod.Get,
                $"https://acceinfoapi-cga0hmcdazb5hjbs.eastus2-01.azurewebsites.net/api/accounts/cust-account?ContactId={ContactId}");
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", AuthToken);
            var response = await Http.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var result = JsonSerializer.Deserialize<ApiResponse<List<AccountModel>>>(json, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
                if (result?.Status == "Success")
                    Accounts = result.Data;
            }
        }
        finally { IsLoading = false; }
    }

    private async Task LoadContacts()
    {
        IsLoading = true;
        try
        {
            var request = new HttpRequestMessage(HttpMethod.Get, "https://acceinfoapi-cga0hmcdazb5hjbs.eastus2-01.azurewebsites.net/api/member/get-list");
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", AuthToken);
            var response = await Http.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var result = JsonSerializer.Deserialize<ApiResponse<List<ContactModel>>>(json, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
                if (result != null && result.Status == "Success" && result.Data != null)
                    Contacts = result.Data;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading contacts: " + ex.Message);
        }
        finally { IsLoading = false; }
    }

    public class ContactModel
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public string NickName { get; set; }
        public string AccountNumber { get; set; }
        public string AccountId { get; set; }
    }

    public class AccountModel
    {
        public string AccountId { get; set; }
        public string AccountName { get; set; }
        public string AccountNumber { get; set; }
        public decimal Balance { get; set; }
    }

    public class ApiResponse<T>
    {
        public string Status { get; set; }
        public T Data { get; set; }
        public string Message { get; set; }
        public int StatusCode { get; set; }
    }
}
