<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACCERewards" xml:space="preserve">
    <value>ACCE Rewards</value>
  </data>
  <data name="ApplyforCreditCard" xml:space="preserve">
    <value>Apply for a Credit Card</value>
  </data>
  <data name="BankAccountsSummary" xml:space="preserve">
    <value>Bank Accounts Summary</value>
  </data>
  <data name="CreditCards" xml:space="preserve">
    <value>CreditCards</value>
  </data>
  <data name="CreditCardSummary" xml:space="preserve">
    <value>Credit Card Summary</value>
  </data>
  <data name="GoodMorningText" xml:space="preserve">
    <value>Good Morning</value>
  </data>
  <data name="OpenNewAccount" xml:space="preserve">
    <value>Open New Account</value>
  </data>
  <data name="ViewOffer" xml:space="preserve">
    <value>View Offer</value>
  </data>
  <data name="WelcomeText" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="BankAccounts" xml:space="preserve">
    <value>Bank Accounts</value>
  </data>
  <data name="FinancialInsights" xml:space="preserve">
    <value>Financial Insights</value>
  </data>
  <data name="NoBankAccountsFound" xml:space="preserve">
    <value>No bank accounts found.</value>
  </data>
  <data name="GoToACCEBusinessBanking" xml:space="preserve">
    <value>Go to ACCE Business Banking</value>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="Messages-Alerts" xml:space="preserve">
    <value>Messages/ Alerts</value>
  </data>
  <data name="Offers" xml:space="preserve">
    <value>Offers</value>
  </data>
  <data name="Banking" xml:space="preserve">
    <value>Baking</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Alerts" xml:space="preserve">
    <value>Alerts</value>
  </data>
  <data name="ForYou" xml:space="preserve">
    <value>For You</value>
  </data>
  <data name="Beyond" xml:space="preserve">
    <value>Beyond</value>
  </data>
  <data name="PointsText" xml:space="preserve">
    <value>Get 30,000 points on a new ACCE Avion Visa</value>
  </data>
  <data name="PointsSubText" xml:space="preserve">
    <value>When you open your first ACCE Avion Visa Credit Card Account by July 31, 2019.</value>
  </data>
  <data name="eBills" xml:space="preserve">
    <value>eBills</value>
  </data>
  <data name="UtilityBillSavings" xml:space="preserve">
    <value>Utility Bill Savings</value>
  </data>
  <data name="UtilityBillSavingsSubtext" xml:space="preserve">
    <value>Your utility expenses are down 15% this month. Great job conserving energy!</value>
  </data>
  <data name="Dining Expenses Rising" xml:space="preserve">
    <value>Dining Expenses Rising</value>
  </data>
  <data name="Dining Expenses Rising Subtext" xml:space="preserve">
    <value>Your spending on dining has increased by 20% this month compared to your average.
</value>
  </data>
  <data name="RecurringSubscription" xml:space="preserve">
    <value>Recurring Subscription</value>
  </data>
  <data name="RecurringSubscriptionSubtext" xml:space="preserve">
    <value>We detected a new $12.99 monthly charge from StreamFlix starting this month.
</value>
  </data>
  <data name="InvestmentSummary" xml:space="preserve">
    <value>Investment Summary</value>
  </data>
  <data name="Investments" xml:space="preserve">
    <value>Investments</value>
  </data>
  <data name="PurchaseInvestment" xml:space="preserve">
    <value>Purchase an Investment</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="MortgageSummary" xml:space="preserve">
    <value>Mortgage Summary</value>
  </data>
  <data name="Mortgage" xml:space="preserve">
    <value>Mortgage</value>
  </data>
  <data name="MortgageSubtext" xml:space="preserve">
    <value>Start a Mortgage pre-approval</value>
  </data>
  <data name="MortgageValueText" xml:space="preserve">
    <value>How much is my home worth?</value>
  </data>
  <data name="AccountSummary" xml:space="preserve">
    <value>Account Summary</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="MyAccounts" xml:space="preserve">
    <value>My Accounts</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Products &amp; Services" xml:space="preserve">
    <value>Products &amp; Services</value>
  </data>
  <data name="ProfileAccountSettings" xml:space="preserve">
    <value>Profile &amp; Account Settings</value>
  </data>
  <data name="PaySendReceiveMoney" xml:space="preserve">
    <value>Pay, Send &amp; Receive Money</value>
  </data>
</root>