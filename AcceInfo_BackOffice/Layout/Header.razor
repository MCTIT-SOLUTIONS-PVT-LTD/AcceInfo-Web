@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage


<style>
    .avatar {
        width: 64px;
        height: 64px;
        color: white;
        font-weight: bold;
        font-size: 22px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        border: 3px solid white;
        overflow: hidden;
    }
</style>

<header>
    <div class="topbar">
        <nav class="navbar-custom">
            <div class="topbar-left">
                <a href="/" class="logo">
                    <span>
                        <img src="assets/images/logo-dark.png" alt="logo-large" class="logo-lg">
                    </span>
                </a>
            </div>

            <ul class="list-unstyled topbar-nav float-right mb-0">
                <li class="dropdown">
                    <a class="nav-link dropdown-toggle arrow-none waves-light waves-effect" data-toggle="dropdown" href="#" role="button"
                       aria-haspopup="false" aria-expanded="false">
                        <i class="mdi mdi-bell-outline nav-icon"></i>
                        <span class="badge badge-danger badge-pill noti-icon-badge">2</span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right dropdown-lg">
                        <h6 class="dropdown-item-text">Notifications (258)</h6>
                        <div class="slimscroll notification-list">
                            <!-- Sample Notifications -->
                            <a href="#" class="dropdown-item notify-item active">
                                <div class="notify-icon bg-success"><i class="mdi mdi-cart-outline"></i></div>
                                <p class="notify-details">Your order is placed<small class="text-muted">Example notification</small></p>
                            </a>
                        </div>
                        <a href="#" class="dropdown-item text-center text-primary">View all <i class="fi-arrow-right"></i></a>
                    </div>
                </li>

                <li class="dropdown">
                    <a class="nav-link dropdown-toggle waves-effect waves-light nav-user" data-toggle="dropdown" href="#" role="button">
                        <img src="assets/images/users/user-1.jpg" alt="profile-user" class="rounded-circle" />
                        <span class="ml-1 nav-user-name hidden-sm"><i class="mdi mdi-chevron-down"></i></span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right">
                        <a class="dropdown-item" href="#"><i class="dripicons-user text-muted mr-2"></i> Profile</a>
                        <a class="dropdown-item" href="#"><i class="dripicons-wallet text-muted mr-2"></i> My Wallet</a>
                        <a class="dropdown-item" href="#"><i class="dripicons-gear text-muted mr-2"></i> Settings</a>
                        <a class="dropdown-item" href="#"><i class="dripicons-lock text-muted mr-2"></i> Lock screen</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#" @onclick="Logout"><i class="dripicons-exit text-muted mr-2"></i> Logout</a>
                    </div>
                </li>

                <li class="menu-item">
                    <a class="navbar-toggle nav-link" id="mobileToggle">
                        <div class="lines">
                            <span></span><span></span><span></span>
                        </div>
                    </a>
                </li>
            </ul>

            <ul class="list-unstyled topbar-nav mb-0">
                <li class="hide-phone app-search">
                    <form role="search">
                        <input type="text" placeholder="Search..." class="form-control">
                        <a href="#"><i class="fas fa-search"></i></a>
                    </form>
                </li>
            </ul>
        </nav>
    </div>

    <div class="page-wrapper-img">
        <div class="page-wrapper-img-inner">
            @* <div class="sidebar-user media">
                <img src="assets/images/users/user-1.jpg" alt="user" class="rounded-circle img-thumbnail mb-1">
                <span class="online-icon"><i class="mdi mdi-record text-success"></i></span>
                <div class="media-body">
                    <h5 class="text-light">Welcome, @FirstName @LastName</h5>
                    <ul class="list-unstyled list-inline mb-0 mt-2">
                        <li class="list-inline-item">
                            <a href="#"><i class="mdi mdi-account text-light"></i></a>
                        </li>
                        <li class="list-inline-item">
                            <a href="#"><i class="mdi mdi-settings text-light"></i></a>
                        </li>
                        <li class="list-inline-item">
                            <a href="#" @onclick="Logout"><i class="mdi mdi-power text-danger"></i></a>
                        </li>
                    </ul>
                </div>
            </div> *@

            <div class="sidebar-user media">
                <div class="avatar rounded-circle mb-1" style="background-color:@BackgroundColor;">
                    @if (!string.IsNullOrEmpty(FirstName) && !string.IsNullOrEmpty(LastName))
                    {
                        <span>@(FirstName.Substring(0, 1).ToUpper())@(LastName.Substring(0, 1).ToUpper())</span>
                    }
                    else
                    {
                        <span>--</span> <!-- default if not available -->
                    }
                </div>
                <span class="online-icon"><i class="mdi mdi-record text-success"></i></span>
                <div class="media-body">
                    <h5 class="text-light">Welcome, @FirstName @LastName</h5>
                    <ul class="list-unstyled list-inline mb-0 mt-2">
                        <li class="list-inline-item">
                            <a href="#"><i class="mdi mdi-account text-light"></i></a>
                        </li>
                        <li class="list-inline-item">
                            <a href="#"><i class="mdi mdi-settings text-light"></i></a>
                        </li>
                        <li class="list-inline-item">
                            <a href="#" @onclick="Logout"><i class="mdi mdi-power text-danger"></i></a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Page title & breadcrumb -->
            <div class="row">
                <div class="col-sm-12">
                    <div class="page-title-box">
                        <div class="float-right align-item-center mt-2">
                            <button class="btn btn-primary px-4 align-self-center report-btn">Contact Us</button>
                        </div>
                        <h4 class="page-title mb-2"><i class="mdi mdi-account mr-2"></i>Accounts Summary</h4>
                        <div>
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="#">My Accounts</a></li>
                                <li class="breadcrumb-item"><a href="#">Accounts Summary</a></li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

@code {
    private string UserName = "";
    private string FirstName = "";
    private string LastName = "";
    private string BackgroundColor;

    protected override async Task OnInitializedAsync()
    {
        var name = await LocalStorage.GetItemAsync<string>("user_name");
        if (!string.IsNullOrWhiteSpace(name))
        {
            UserName = name;
        }

        var F_Name = await LocalStorage.GetItemAsync<string>("user_firstName");
        var L_Name = await LocalStorage.GetItemAsync<string>("user_lastName");

        if (!string.IsNullOrWhiteSpace(F_Name) && !string.IsNullOrWhiteSpace(L_Name))
        {
            FirstName = F_Name;
            LastName = L_Name;
        }

        BackgroundColor = GetRandomColor();
    }

    private string GetRandomColor()
    {
        var colors = new List<string>
    {
        "#4a90e2", // Blue
        "#50e3c2", // Teal
        "#f5a623", // Orange
        "#9013fe", // Purple
        "#7ed321", // Green
        "#f8e71c", // Yellow
        "#d0021b", // Red
        "#b8e986", // Light Green
        "#bd10e0", // Pink
        "#417505"  // Dark Green
    };

        var random = new Random();
        int index = random.Next(colors.Count);
        return colors[index];
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("auth_token");
        await LocalStorage.RemoveItemAsync("user_name");
        await LocalStorage.RemoveItemAsync("user_firstName");
        await LocalStorage.RemoveItemAsync("user_lastName");
        await LocalStorage.RemoveItemAsync("user_refreshToken");
        await LocalStorage.RemoveItemAsync("call_datetime");
        await LocalStorage.RemoveItemAsync("user_contactId");

        // await LocalStorage.RemoveItemAsync("user_profilename");
        // await LocalStorage.RemoveItemAsync("user_profilepwd");

        NavigationManager.NavigateTo("/login", true);
    }
}
